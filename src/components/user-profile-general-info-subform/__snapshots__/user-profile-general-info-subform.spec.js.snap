// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`rendering when submitting should disable all input fields 1`] = `
<CollapsiblePanel
  label={
    <FormattedMessage
      defaultMessage="General Information"
      description="Title of the User Profile general info panel"
      id="UserProfile.GeneralInfoPanel.title"
      values={Object {}}
    />
  }
>
  <FormBox
    hasWarning={false}
  >
    <LabelField
      isRequired={true}
      title={
        <FormattedMessage
          defaultMessage="First Name"
          description="First name label"
          id="UserProfile.GeneralInfoPanel.firstName"
          values={Object {}}
        />
      }
    />
    <Stack
      alignItems="stretch"
      scale="s"
    >
      <TextInput
        hasError={false}
        horizontalConstraint="scale"
        isDisabled={true}
        name="firstName"
        onChange={[MockFunction]}
        value="John"
      />
      <ValidationErrorSwitch
        errors={Object {}}
        isTouched={false}
      >
        <ValidationErrorMatch
          rule="required"
        >
          <ErrorMessage>
            <FormattedMessage
              defaultMessage="Please fill in this required field."
              description="An error message to show if the field is required"
              id="Validation.required"
              values={Object {}}
            />
          </ErrorMessage>
        </ValidationErrorMatch>
      </ValidationErrorSwitch>
    </Stack>
  </FormBox>
  <FormBox
    hasWarning={false}
  >
    <LabelField
      isRequired={true}
      title={
        <FormattedMessage
          defaultMessage="Last Name"
          description="Last name label"
          id="UserProfile.GeneralInfoPanel.lastName"
          values={Object {}}
        />
      }
    />
    <Stack
      alignItems="stretch"
      scale="s"
    >
      <TextInput
        hasError={false}
        horizontalConstraint="scale"
        isDisabled={true}
        name="lastName"
        onChange={[MockFunction]}
        value="Snow"
      />
      <ValidationErrorSwitch
        errors={Object {}}
        isTouched={false}
      >
        <ValidationErrorMatch
          rule="required"
        >
          <ErrorMessage>
            <FormattedMessage
              defaultMessage="Please fill in this required field."
              description="An error message to show if the field is required"
              id="Validation.required"
              values={Object {}}
            />
          </ErrorMessage>
        </ValidationErrorMatch>
      </ValidationErrorSwitch>
    </Stack>
  </FormBox>
  <FormBox
    hasWarning={false}
  >
    <LabelField
      isRequired={false}
      title={
        <FormattedMessage
          defaultMessage="E-mail"
          description="E-mail label"
          id="UserProfile.GeneralInfoPanel.email"
          values={Object {}}
        />
      }
    />
    <TextInput
      horizontalConstraint="scale"
      isDisabled={true}
      name="email"
      onChange={[MockFunction]}
      value="john@snow.got"
    />
  </FormBox>
</CollapsiblePanel>
`;

exports[`rendering when there are no errors should ensure layout structure 1`] = `
<CollapsiblePanel
  label={
    <FormattedMessage
      defaultMessage="General Information"
      description="Title of the User Profile general info panel"
      id="UserProfile.GeneralInfoPanel.title"
      values={Object {}}
    />
  }
>
  <FormBox
    hasWarning={false}
  >
    <LabelField
      isRequired={true}
      title={
        <FormattedMessage
          defaultMessage="First Name"
          description="First name label"
          id="UserProfile.GeneralInfoPanel.firstName"
          values={Object {}}
        />
      }
    />
    <Stack
      alignItems="stretch"
      scale="s"
    >
      <TextInput
        hasError={false}
        horizontalConstraint="scale"
        isDisabled={false}
        name="firstName"
        onChange={[MockFunction]}
        value="John"
      />
      <ValidationErrorSwitch
        errors={Object {}}
        isTouched={false}
      >
        <ValidationErrorMatch
          rule="required"
        >
          <ErrorMessage>
            <FormattedMessage
              defaultMessage="Please fill in this required field."
              description="An error message to show if the field is required"
              id="Validation.required"
              values={Object {}}
            />
          </ErrorMessage>
        </ValidationErrorMatch>
      </ValidationErrorSwitch>
    </Stack>
  </FormBox>
  <FormBox
    hasWarning={false}
  >
    <LabelField
      isRequired={true}
      title={
        <FormattedMessage
          defaultMessage="Last Name"
          description="Last name label"
          id="UserProfile.GeneralInfoPanel.lastName"
          values={Object {}}
        />
      }
    />
    <Stack
      alignItems="stretch"
      scale="s"
    >
      <TextInput
        hasError={false}
        horizontalConstraint="scale"
        isDisabled={false}
        name="lastName"
        onChange={[MockFunction]}
        value="Snow"
      />
      <ValidationErrorSwitch
        errors={Object {}}
        isTouched={false}
      >
        <ValidationErrorMatch
          rule="required"
        >
          <ErrorMessage>
            <FormattedMessage
              defaultMessage="Please fill in this required field."
              description="An error message to show if the field is required"
              id="Validation.required"
              values={Object {}}
            />
          </ErrorMessage>
        </ValidationErrorMatch>
      </ValidationErrorSwitch>
    </Stack>
  </FormBox>
  <FormBox
    hasWarning={false}
  >
    <LabelField
      isRequired={false}
      title={
        <FormattedMessage
          defaultMessage="E-mail"
          description="E-mail label"
          id="UserProfile.GeneralInfoPanel.email"
          values={Object {}}
        />
      }
    />
    <TextInput
      horizontalConstraint="scale"
      isDisabled={true}
      name="email"
      onChange={[MockFunction]}
      value="john@snow.got"
    />
  </FormBox>
</CollapsiblePanel>
`;
